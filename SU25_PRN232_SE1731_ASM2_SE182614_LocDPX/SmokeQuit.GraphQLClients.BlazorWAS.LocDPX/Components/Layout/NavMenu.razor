@inject AuthService AuthService
@inject NavigationManager Navigation
@implements IDisposable

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">SmokeQuit Chat System</a>
        @if (AuthService.IsAuthenticated)
        {
            <div class="d-flex align-items-center">
                <span class="text-white me-3">Welcome, @AuthService.CurrentUser?.FullName</span>
                <button class="btn btn-outline-light btn-sm" @onclick="Logout">
                    <i class="fas fa-sign-out-alt"></i> Logout
                </button>
            </div>
        }
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        @if (!AuthService.IsAuthenticated)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                    <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home / Login
                </NavLink>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/chats">
                    <span class="bi bi-chat-fill-nav-menu" aria-hidden="true"></span> Chat Management
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/coaches">
                    <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> Coach Management
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <div class="nav-link text-muted">
                    <small>User: @AuthService.CurrentUser?.UserName</small>
                </div>
            </div>
        }
    </nav>
</div>

@code {
    protected override void OnInitialized()
    {
        AuthService.AuthStateChanged += OnAuthStateChanged;
    }

    private void OnAuthStateChanged(bool isAuthenticated)
    {
        InvokeAsync(StateHasChanged);
    }

    private void Logout()
    {
        AuthService.Logout();
    }

    public void Dispose()
    {
        AuthService.AuthStateChanged -= OnAuthStateChanged;
    }
}