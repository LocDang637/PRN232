@model SmokeQuit.Repositories.LocDPX.Models.ChatsLocDpx

@{
    ViewData["Title"] = "Delete Chat Message";
}

<div class="row">
    <div class="col-md-8 mx-auto">
        <div class="card border-danger">
            <div class="card-header bg-danger text-white">
                <h4 class="mb-0">
                    <i class="fas fa-trash-alt"></i> Delete Chat Message
                </h4>
            </div>
            <div class="card-body">
                <div class="alert alert-warning" role="alert">
                    <i class="fas fa-exclamation-triangle"></i>
                    <strong>Warning!</strong> Are you sure you want to delete this message? This action cannot be undone.
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <h5 class="text-danger mb-3">Message Details</h5>

                        <dl class="row">
                            <dt class="col-sm-4">
                                <i class="fas fa-comment text-info"></i> Message:
                            </dt>
                            <dd class="col-sm-8">
                                <div class="border rounded p-2 bg-light">
                                    @Html.DisplayFor(model => model.Message)
                                </div>
                            </dd>

                            <dt class="col-sm-4">
                                <i class="fas fa-tag text-warning"></i> Type:
                            </dt>
                            <dd class="col-sm-8">
                                <span class="badge bg-info">
                                    <i class="fas fa-@(Model.MessageType == "text" ? "font" : Model.MessageType == "image" ? "image" : "file-alt")"></i>
                                    @Html.DisplayFor(model => model.MessageType)
                                </span>
                            </dd>

                            <dt class="col-sm-4">
                                <i class="fas fa-paper-plane text-secondary"></i> Sent By:
                            </dt>
                            <dd class="col-sm-8">
                                <span class="badge @(Model.SentBy == "user" ? "bg-primary" : "bg-success")">
                                    <i class="fas fa-@(Model.SentBy == "user" ? "user" : "user-tie")"></i>
                                    @Html.DisplayFor(model => model.SentBy)
                                </span>
                            </dd>

                            <dt class="col-sm-4">
                                <i class="fas fa-eye text-success"></i> Status:
                            </dt>
                            <dd class="col-sm-8">
                                @if (Model.IsRead)
                                {
                                    <span class="badge bg-success">
                                        <i class="fas fa-check-circle"></i> Read
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-warning">
                                        <i class="fas fa-envelope"></i> Unread
                                    </span>
                                }
                            </dd>

                            @if (!string.IsNullOrEmpty(Model.AttachmentUrl))
                            {
                                <dt class="col-sm-4">
                                    <i class="fas fa-paperclip text-info"></i> Attachment:
                                </dt>
                                <dd class="col-sm-8">
                                    <a href="@Model.AttachmentUrl" target="_blank" class="btn btn-sm btn-outline-info">
                                        <i class="fas fa-external-link-alt"></i> View Attachment
                                    </a>
                                </dd>
                            }
                        </dl>
                    </div>

                    <div class="col-md-6">
                        <h5 class="text-primary mb-3">Participants</h5>

                        <dl class="row">
                            <dt class="col-sm-4">
                                <i class="fas fa-user text-primary"></i> User:
                            </dt>
                            <dd class="col-sm-8">
                                @if (Model.User != null)
                                {
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-user-circle text-primary me-2"></i>
                                        <div>
                                            <strong>@Html.DisplayFor(model => model.User.UserName)</strong><br />
                                            <small class="text-muted">@Html.DisplayFor(model => model.User.FullName)</small>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <span class="text-muted">No user assigned</span>
                                }
                            </dd>

                            <dt class="col-sm-4">
                                <i class="fas fa-user-tie text-success"></i> Coach:
                            </dt>
                            <dd class="col-sm-8">
                                @if (Model.Coach != null)
                                {
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-user-tie text-success me-2"></i>
                                        <div>
                                            <strong>@Html.DisplayFor(model => model.Coach.FullName)</strong><br />
                                            @if (!string.IsNullOrEmpty(Model.Coach.Email))
                                            {
                                                <small class="text-muted">
                                                    <a href="mailto:@Model.Coach.Email">@Model.Coach.Email</a>
                                                </small>
                                            }
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <span class="text-muted">No coach assigned</span>
                                }
                            </dd>
                        </dl>

                        <h5 class="text-info mb-3">Timestamps</h5>

                        <dl class="row">
                            <dt class="col-sm-4">
                                <i class="fas fa-calendar-plus text-info"></i> Created:
                            </dt>
                            <dd class="col-sm-8">
                                @if (Model.CreatedAt.HasValue)
                                {
                                    <div>
                                        <strong>@Model.CreatedAt.Value.ToString("MMM dd, yyyy")</strong><br />
                                        <small class="text-muted">@Model.CreatedAt.Value.ToString("h:mm tt")</small>
                                    </div>
                                }
                                else
                                {
                                    <span class="text-muted">N/A</span>
                                }
                            </dd>

                            @if (Model.ResponseTime.HasValue)
                            {
                                <dt class="col-sm-4">
                                    <i class="fas fa-clock text-warning"></i> Responded:
                                </dt>
                                <dd class="col-sm-8">
                                    <div>
                                        <strong>@Model.ResponseTime.Value.ToString("MMM dd, yyyy")</strong><br />
                                        <small class="text-muted">@Model.ResponseTime.Value.ToString("h:mm tt")</small>
                                    </div>
                                </dd>
                            }

                            <dt class="col-sm-4">
                                <i class="fas fa-hashtag text-secondary"></i> ID:
                            </dt>
                            <dd class="col-sm-8">
                                <code>#@Model.ChatsLocDpxid</code>
                            </dd>
                        </dl>
                    </div>
                </div>

                <hr />

                <!-- Delete confirmation form -->
                <form asp-action="Delete" method="post">
                    <input type="hidden" asp-for="ChatsLocDpxid" />

                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <a asp-action="Details" asp-route-id="@Model.ChatsLocDpxid" class="btn btn-info me-2">
                                <i class="fas fa-eye"></i> View Details
                            </a>
                            <a asp-action="Edit" asp-route-id="@Model.ChatsLocDpxid" class="btn btn-warning">
                                <i class="fas fa-edit"></i> Edit Instead
                            </a>
                        </div>

                        <div>
                            <a asp-action="Index" class="btn btn-secondary me-2">
                                <i class="fas fa-arrow-left"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-danger" id="deleteBtn">
                                <i class="fas fa-trash-alt"></i> Confirm Delete
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Confirm deletion
            $('#deleteBtn').click(function(e) {
                e.preventDefault();

                const messagePreview = '@Html.Raw(Html.DisplayFor(model => model.Message).ToString().Replace("'", "\\'").Substring(0, Math.Min(50, Model.Message?.Length ?? 0)))';

                if (confirm(`Are you absolutely sure you want to delete this message?\n\n"${messagePreview}${messagePreview.length >= 50 ? '...' : '"}"\n\nThis action cannot be undone!`)) {
                    // Show loading state
                    $(this).prop('disabled', true)
                           .html('<i class="fas fa-spinner fa-spin"></i> Deleting...');

                    // Submit the form
                    $(this).closest('form').submit();
                }
            });

            // Add confirmation for navigation away
            let isSubmitting = false;

            $('form').on('submit', function() {
                isSubmitting = true;
            });

            $(window).on('beforeunload', function() {
                if (!isSubmitting) {
                    return 'Are you sure you want to leave? Your delete confirmation will be lost.';
                }
            });
        });
    </script>
}