@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<SmokeQuit.Repositories.LocDPX.Models.ChatsLocDpx>

@{
    ViewData["Title"] = "Chat Messages";
    var currentMessage = Context.Request.Query["message"].ToString();
    var currentMessageType = Context.Request.Query["messageType"].ToString();
    var currentSentBy = Context.Request.Query["sentBy"].ToString();
}

<!-- Display success/error messages -->
@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle"></i> @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-triangle"></i> @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="fas fa-comments text-primary"></i> Chat Messages</h1>
    <a asp-action="Create" class="btn btn-primary">
        <i class="fas fa-plus"></i> Create New Message
    </a>
</div>

<!-- Search Form -->
<div class="card mb-4">
    <div class="card-header">
        <h5 class="mb-0"><i class="fas fa-search"></i> Search Messages</h5>
    </div>
    <div class="card-body">
        <form asp-action="Index" method="get" class="row g-3">
            <div class="col-md-3">
                <label for="message" class="form-label">Message Content</label>
                <input type="text" id="message" name="message" class="form-control" 
                       placeholder="Search by message..." value="@currentMessage" />
            </div>
            <div class="col-md-2">
                <label for="messageType" class="form-label">Message Type</label>
                <select id="messageType" name="messageType" class="form-select">
                    <option value="">All Types</option>
                    <option value="text" selected="@(currentMessageType == "text" ? "selected" : null)">Text</option>
                    <option value="image" selected="@(currentMessageType == "image" ? "selected" : null)">Image</option>
                    <option value="file" selected="@(currentMessageType == "file" ? "selected" : null)">File</option>
                </select>
            </div>
            <div class="col-md-2">
                <label for="sentBy" class="form-label">Sent By</label>
                <select id="sentBy" name="sentBy" class="form-select">
                    <option value="">All</option>
                    <option value="user" selected="@(currentSentBy == "user" ? "selected" : null)">User</option>
                    <option value="coach" selected="@(currentSentBy == "coach" ? "selected" : null)">Coach</option>
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">&nbsp;</label>
                <div class="d-flex gap-2">
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-search"></i> Search
                    </button>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-times"></i> Clear
                    </a>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Messages Table -->
<div class="card">
    <div class="card-body">
        @if (Model != null && Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th><i class="fas fa-comment"></i> Message</th>
                            <th><i class="fas fa-tag"></i> Type</th>
                            <th><i class="fas fa-user"></i> Sent By</th>
                            <th><i class="fas fa-user-circle"></i> User</th>
                            <th><i class="fas fa-user-tie"></i> Coach</th>
                            <th><i class="fas fa-eye"></i> Status</th>
                            <th><i class="fas fa-calendar"></i> Created</th>
                            <th><i class="fas fa-cogs"></i> Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <div class="message-preview">
                                        @if (item.Message?.Length > 50)
                                        {
                                            <span title="@item.Message">@item.Message.Substring(0, 50)...</span>
                                        }
                                        else
                                        {
                                            <span>@item.Message</span>
                                        }
                                        @if (!string.IsNullOrEmpty(item.AttachmentUrl))
                                        {
                                            <i class="fas fa-paperclip text-info ms-1" title="Has attachment"></i>
                                        }
                                    </div>
                                </td>
                                <td>
                                    <span class="badge bg-info">
                                        <i class="fas fa-@(item.MessageType == "text" ? "font" : item.MessageType == "image" ? "image" : "file-alt")"></i>
                                        @item.MessageType
                                    </span>
                                </td>
                                <td>
                                    <span class="badge @(item.SentBy == "user" ? "bg-primary" : "bg-success")">
                                        <i class="fas fa-@(item.SentBy == "user" ? "user" : "user-tie")"></i>
                                        @item.SentBy
                                    </span>
                                </td>
                                <td>
                                    @if (item.User != null)
                                    {
                                        <span title="@item.User.FullName">
                                            <i class="fas fa-user text-primary"></i> @item.User.UserName
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">N/A</span>
                                    }
                                </td>
                                <td>
                                    @if (item.Coach != null)
                                    {
                                        <span title="@item.Coach.Email">
                                            <i class="fas fa-user-tie text-success"></i> @item.Coach.FullName
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">N/A</span>
                                    }
                                </td>
                                <td>
                                    @if (item.IsRead)
                                    {
                                        <span class="badge bg-success">
                                            <i class="fas fa-check-circle"></i> Read
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning">
                                            <i class="fas fa-envelope"></i> Unread
                                        </span>
                                    }
                                </td>
                                <td>
                                    @if (item.CreatedAt.HasValue)
                                    {
                                        <small>
                                            @item.CreatedAt.Value.ToString("MM/dd/yyyy")
                                            <br />
                                            <span class="text-muted">@item.CreatedAt.Value.ToString("HH:mm")</span>
                                        </small>
                                    }
                                    else
                                    {
                                        <span class="text-muted">N/A</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@item.ChatsLocDpxid" 
                                           class="btn btn-sm btn-outline-info" title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@item.ChatsLocDpxid" 
                                           class="btn btn-sm btn-outline-warning" title="Edit">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        @if (User.IsInRole("1")) // Only admin can delete
                                        {
                                            <a asp-action="Delete" asp-route-id="@item.ChatsLocDpxid" 
                                               class="btn btn-sm btn-outline-danger" title="Delete">
                                                <i class="fas fa-trash-alt"></i>
                                            </a>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="d-flex justify-content-between align-items-center mt-3">
                <div>
                    <small class="text-muted">
                        Showing @((Model.PageNumber - 1) * Model.PageSize + 1) to 
                        @Math.Min(Model.PageNumber * Model.PageSize, Model.TotalItemCount) of 
                        @Model.TotalItemCount entries
                    </small>
                </div>
                <div>
                    @Html.PagedListPager(
                        Model,
                        page => Url.Action("Index", "ChatsLocDpx", new { 
                            pageNumber = page,
                            message = currentMessage,
                            messageType = currentMessageType,
                            sentBy = currentSentBy
                        }),
                        new PagedListRenderOptions
                        {
                            DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                            DisplayLinkToLastPage = PagedListDisplayMode.Always,
                            MaximumPageNumbersToDisplay = 5,
                            ContainerDivClasses = new[] { "d-flex", "justify-content-center" },
                            PageClasses = new[] { "page-link" },
                            ActiveLiElementClass = "active",
                            LiElementClasses = new[] { "page-item" }
                        }
                    )
                </div>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-comments fa-3x text-muted mb-3"></i>
                <h4 class="text-muted">No messages found</h4>
                <p class="text-muted">There are no chat messages matching your search criteria.</p>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Create First Message
                </a>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Auto-dismiss alerts after 5 seconds
            setTimeout(function() {
                $('.alert').fadeOut('slow');
            }, 5000);

            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Add tooltips to table cells
            $('[title]').tooltip();

            // Set selected options based on current values
            $('#messageType').val('@currentMessageType');
            $('#sentBy').val('@currentSentBy');
        });
    </script>
}